from flask import Flask, render_template, request
import requests
from datetime import datetime

app = Flask(__name__)

# –í–∞—à API –∫–ª—é—á –æ—Ç OpenWeatherMap
API_KEY = "d25be7881e448482385df1a9ee215eac"


def get_weather(city):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞"""
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric&lang=ru"
        response = requests.get(url, timeout=5)
        data = response.json()

        if data.get("cod") != 200:
            return None

        return {
            "city": data["name"],
            "temp": round(data["main"]["temp"], 1),
            "feels_like": round(data["main"]["feels_like"], 1),
            "humidity": data["main"]["humidity"],
            "pressure": data["main"]["pressure"],
            "wind": round(data["wind"]["speed"], 1),
            "description": data["weather"][0]["description"],
            "icon": data["weather"][0]["icon"],
            "sunrise": datetime.fromtimestamp(data["sys"]["sunrise"]).strftime("%H:%M"),
            "sunset": datetime.fromtimestamp(data["sys"]["sunset"]).strftime("%H:%M"),
        }
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã: {e}")
        return None


def get_forecast(city):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ 3 –¥–Ω—è"""
    try:
        url = f"http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={API_KEY}&units=metric&lang=ru"
        response = requests.get(url, timeout=5)
        data = response.json()

        if data.get("cod") != "200":
            return []

        forecast = []
        # –ë–µ—Ä–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å (–∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ = 8 –∑–∞–ø–∏—Å–µ–π –ø–æ 3 —á–∞—Å–∞)
        for i in range(0, min(24, len(data["list"])), 8):
            item = data["list"][i]
            date_obj = datetime.fromtimestamp(item["dt"])

            forecast.append(
                {
                    "date": date_obj.strftime("%d.%m"),
                    "temp": round(item["main"]["temp"], 1),
                    "description": item["weather"][0]["description"],
                    "icon": item["weather"][0]["icon"],
                }
            )

        return forecast[:3]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ 3 –¥–Ω—è

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞: {e}")
        return []


def get_weather_advice(weather):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–≥–æ–¥—ã"""
    if not weather:
        return None

    temp = weather["temp"]
    description = weather["description"].lower()

    if "–¥–æ–∂–¥—å" in description or "–ª–∏–≤–µ–Ω—å" in description:
        return "‚òÇÔ∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –∑–æ–Ω—Ç!"
    elif "—Å–Ω–µ–≥" in description or "–º–µ—Ç–µ–ª—å" in description:
        return "‚ùÑÔ∏è –û—Å—Ç–æ—Ä–æ–∂–Ω–æ, –Ω–∞ –¥–æ—Ä–æ–≥–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫–æ–ª—å–∑–∫–æ!"
    elif temp > 30:
        return "üå°Ô∏è –û—á–µ–Ω—å –∂–∞—Ä–∫–æ! –ü–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã –∏ –∏–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä—è–º—ã—Ö —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –ª—É—á–µ–π"
    elif temp > 25:
        return "‚òÄÔ∏è –û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏! –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º"
    elif temp < -10:
        return "üß• –û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ! –û–¥–µ–≤–∞–π—Ç–µ—Å—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–µ–ø–ª–æ"
    elif temp < 5:
        return "‚ùÑÔ∏è –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ, –æ–¥–µ–≤–∞–π—Ç–µ—Å—å —Ç–µ–ø–ª–µ–µ!"
    elif "—Ç—É–º–∞–Ω" in description:
        return "üå´Ô∏è –¢—É–º–∞–Ω! –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –Ω–∞ –¥–æ—Ä–æ–≥–∞—Ö"
    elif "–≤–µ—Ç–µ—Ä" in description or weather["wind"] > 10:
        return "üí® –°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä! –î–µ—Ä–∂–∏—Ç–µ –∑–æ–Ω—Ç –∫—Ä–µ–ø—á–µ"
    elif "—è—Å–Ω–æ" in description and 15 <= temp <= 25:
        return "‚ú® –ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏!"

    return None


@app.route("/", methods=["GET", "POST"])
def index():
    weather = None
    forecast = []
    advice = None

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞
    if request.method == "POST":
        city = request.form.get("city", "").strip()
    else:
        city = "–ê–ª–º–∞—Ç—ã"  # –ì–æ—Ä–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    if city:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
        weather = get_weather(city)

        if weather:
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑
            forecast = get_forecast(city)
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–≤–µ—Ç
            advice = get_weather_advice(weather)

    return render_template("index.html", weather=weather, forecast=forecast, advice=advice)


@app.errorhandler(404)
def not_found_error(error):
    return render_template("index.html", weather=None, forecast=[], advice=None), 404


@app.errorhandler(500)
def internal_error(error):
    return render_template("index.html", weather=None, forecast=[], advice=None), 500


if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=5000)
